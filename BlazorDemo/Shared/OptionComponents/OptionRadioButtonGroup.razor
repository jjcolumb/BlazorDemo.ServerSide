@using DevExpress.Blazor.Internal;
@using DevExpress.Blazor.Buttons.Internal
@using DevExpress.Blazor.Editors.Internal
@typeparam TItem
<OptionComponent Label="@Label">
    <DxRadioGroup Value="@Value" ValueChanged="@ValueChanged" CssClass="@ItemCssClass">
        @foreach (var item in Source ?? Enumerable.Empty<TItem>()) {
            <DxRadio @key="item" Value="@item" RootCssClass="@RazorUtils.CombineCssClasses(ItemCssClass, ActualCssClass)"/>
        }
        @if (ChildContent != null) {
            @ChildContent
        }
    </DxRadioGroup>
</OptionComponent>

@code{
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [Parameter]
    public IEnumerable<TItem> Source { get; set; }
    [Parameter]
    public TItem Value { get; set; }
    [Parameter]
    public bool Inline { get; set; } = true;
    [Parameter]
    public string CssClass { get; set; }
    [Parameter]
    public string ItemCssClass { get; set; }
    [Parameter]
    public EventCallback<TItem> ValueChanged { get; set; }
    [Parameter]
    public string Label { get; set; }
    string ActualCssClass => Inline ? RazorUtils.CombineCssClasses("d-inline-flex", "me-3") : "mb-2";
}

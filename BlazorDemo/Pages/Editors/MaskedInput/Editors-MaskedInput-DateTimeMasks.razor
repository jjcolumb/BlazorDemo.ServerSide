<DemoPageSectionComponent Id="Editors-MaskedInput-DateTimeMasks" ShowSizeMode="true">
    <ChildContentWithParameters Context="Params">
        <DxMaskedInput @bind-Value="@Date"
                       SizeMode="Params.SizeMode"
                       CssClass="cw-320"
                       Mask="@DateTimeMaskValue">
            <DxDateTimeMaskProperties Culture="MaskCultureInfo.Value" CaretMode="@((MaskCaretMode)CaretMode)" />
        </DxMaskedInput>
        <p class="demo-text cw-320 mt-2">
            Date: <b>@Date</b>
        </p>
    </ChildContentWithParameters>

    <OptionsContent>
        <OptionComboBox CssClass="ow-150"
                        Label="Mask:"
                        Data="PredefinedDateTimeMasks"
                        Value="DateTimeMaskName"
                        ValueChanged="@((string mask) =>ChangeDateTimeMaskType(mask))" />
        <OptionComboBox CssClass="ow-150"
                        Label="Caret Mode:"
                        Data="@(Enum.GetNames(typeof(MaskCaretMode)))"
                        Value="@CaretMode.ToString()"
                        ValueChanged="@((string selectedItem) =>
                                        { CaretMode = Enum.Parse<MaskCaretMode>(selectedItem); })" />
        <OptionComboBox CssClass="ow-150"
                        Label="Culture:"
                        Data="@CultureInfoItems"
                        @bind-Value="MaskCultureInfo" />
    </OptionsContent>

    @code {
        class CultureInfoItem {
            public CultureInfo Value { get; set; }
            public string Text { get; set; }
            public override string ToString() { return Text; }
        }

        static CultureInfoItem[] CultureInfoItems { get; set; } = new CultureInfoItem[] {
            new CultureInfoItem() {
                Value = CultureInfo.GetCultureInfo("en-US"),
                Text = "American English"
            },
            new CultureInfoItem() {
                Value = CultureInfo.GetCultureInfo("de-DE"),
                Text = "German"
            },
        };

        IEnumerable<string> PredefinedDateTimeMasks = new List<string>() {
            "ISO8601",
            "LongDate",
            "LongDateTime",
            "LongTime",
            "MonthAndDay",
            "MonthAndYear",
            "RFC1123",
            "ShortDate",
            "ShortDateTime",
            "ShortTime",
            "Universal"
        };

        DateTime Date { get; set; } = DateTime.Today;
        CultureInfoItem MaskCultureInfo { get; set; } = CultureInfoItems.FirstOrDefault();
        string DateTimeMaskValue { get; set; } = DateTimeMask.LongDate;
        MaskCaretMode CaretMode { get; set; }
        string DateTimeMaskName { get; set; } = "LongDate";

        void ChangeDateTimeMaskType(string mask) {
            DateTimeMaskValue = mask switch {
                "ISO8601" => DateTimeMask.ISO8601,
                "LongDate" => DateTimeMask.LongDate,
                "LongDateTime" => DateTimeMask.LongDateTime,
                "LongTime" => DateTimeMask.LongTime,
                "MonthAndDay" => DateTimeMask.MonthAndDay,
                "MonthAndYear" => DateTimeMask.MonthAndYear,
                "RFC1123" => DateTimeMask.RFC1123,
                "ShortDate" => DateTimeMask.ShortDate,
                "ShortDateTime" => DateTimeMask.ShortDateTime,
                "ShortTime" => DateTimeMask.ShortTime,
                "Universal" => DateTimeMask.Universal,
                _ => throw new ArgumentException()
            };
            DateTimeMaskName = mask;
        }
    }
</DemoPageSectionComponent>

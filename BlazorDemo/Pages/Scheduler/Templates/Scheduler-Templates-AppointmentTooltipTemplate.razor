@page "/Scheduler/Templates/AppointmentTooltipTemplate"

<DemoPageSectionComponent Id="Scheduler-Templates-AppointmentTooltipTemplate">
    <ChildContent>
        <DxScheduler StartDate="@DateTime.Today" DataStorage="@DataStorage"
                     GroupType="SchedulerGroupType.Date" CssClass="w-100"
                     @bind-ShowAppointmentTooltip="@ShowAppointmentTooltip">
            <Views>
                <DxSchedulerDayView DayCount="2" ShowWorkTimeOnly="true">
                    <HorizontalAppointmentTemplate>
                        @{
                            string backgroundCss = context.Resource == null ? "dx-purple-color" : context.Resource.BackgroundCssClass;
                        }
                        <div class="demo-sc-apt @((bool)context.CustomFields["Accepted"] ? "demo-sc-accepted" : "")" style="width: 100%;">
                            <div class="card demo-apt-bg @backgroundCss" style="width: 100%;"></div>
                            <div class="card shadow-sm p-1 demo-sc-apt-content text-white" style="width:100%;">
                                @context.Appointment.Subject
                            </div>
                        </div>
                    </HorizontalAppointmentTemplate>
                    <VerticalAppointmentTemplate>
                        @{
                            string backgroundCss = context.Resource == null ? "dx-purple-color" : context.Resource.BackgroundCssClass;
                        }
                        <div class="shadow-sm demo-sc-apt @((bool)context.CustomFields["Accepted"] ? "demo-sc-accepted"  : "")">
                            <div class="card demo-apt-bg @backgroundCss"></div>
                            <div class="card demo-sc-apt-content text-white">
                                <div class="card demo-sc-status-container">
                                    <div class="card demo-apt-status @backgroundCss"></div>
                                </div>
                                <div class="demo-apt-subject">
                                    @context.Appointment.Subject
                                </div>
                            </div>
                        </div>
                    </VerticalAppointmentTemplate>
                </DxSchedulerDayView>
            </Views>
            <AppointmentTooltipTemplate>
                @{
                    string resourceCssClass = context.Resource == null ? "dx-purple-color" : context.Resource.BackgroundCssClass;
                    bool accepted = (bool)context.CustomFields["Accepted"];
                    string buttonText = accepted ? "Accepted" : "Tentative";
                    string iconCssClass = accepted ? "dx-icon-accepted" : "dx-icon-tentative";
                    string startDateTime = $"{context.Appointment.Start.ToString("ddd, MMM dd")}, {context.Appointment.Start.ToShortTimeString()} - {context.Appointment.End.ToShortTimeString()}";
                    void OnClick(MouseEventArgs args) {
                        context.CustomFields["Accepted"] = !accepted;
                    }
                }
                <div class="container">
                    <div class="row mb-3">
                        <div class="col-auto ms-1">
                            <div class="dxsc-label-item @resourceCssClass"></div>
                        </div>
                        <div class="col ps-0">
                            <span class="dxsc-subject" style="vertical-align: middle;">
                                @context.Appointment.Subject
                            </span>
                            @if(context.Resource != null) {
                                <span class="dxsc-subject" style="vertical-align: middle;">
                                    (@context.Resource.Caption)
                                </span>
                            }
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-auto ms-1">
                            <svg class="dxsc-time-icon dx-icon" role="img">
                                <use href="#dxsc-time-icon"></use>
                            </svg>
                        </div>
                        <div class="col ps-0"><span style="vertical-align: middle;">@startDateTime</span></div>
                    </div>
                    <hr />
                    <div class="row mb-3">
                        <div class="col-auto">
                            <DxButton Click="OnClick" RenderStyleMode="ButtonRenderStyleMode.Text" RenderStyle="ButtonRenderStyle.Link"
                                      Text="@buttonText" IconCssClass="@iconCssClass">
                            </DxButton>
                        </div>
                    </div>
                </div>
            </AppointmentTooltipTemplate>
        </DxScheduler>
    </ChildContent>
    <OptionsContent>
        <OptionCheckBox @bind-Checked="@ShowAppointmentTooltip" Label="Show Appointment Tooltip" />
    </OptionsContent>


    @code {
        bool ShowAppointmentTooltip { get; set; } = true;

        DxSchedulerDataStorage DataStorage = new DxSchedulerDataStorage() {
            AppointmentsSource = ResourceAppointmentCollection.GetAppointments(),
            AppointmentMappings = new DxSchedulerAppointmentMappings() {
                Type = "AppointmentType",
                Start = "StartDate",
                End = "EndDate",
                Subject = "Caption",
                AllDay = "AllDay",
                Location = "Location",
                Description = "Description",
                LabelId = "Label",
                StatusId = "Status",
                RecurrenceInfo = "Recurrence",
                ResourceId = "ResourceId",
                CustomFieldMappings = new List<DxSchedulerCustomFieldMapping> {
                    new DxSchedulerCustomFieldMapping{ Name = "Accepted", Mapping = "Accepted" }
                }
            },
            ResourcesSource = ResourceCollection.GetResourcesForGrouping(),
            ResourceMappings = new DxSchedulerResourceMappings() {
                Id = "Id",
                Caption = "Name",
                BackgroundCssClass = "BackgroundCss",
                TextCssClass = "TextCss"
            }
        };
    }
</DemoPageSectionComponent>
